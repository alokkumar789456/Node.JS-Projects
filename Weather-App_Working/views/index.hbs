<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="../src/icon/cloudy.png" type="image/x-icon">
    <title>Weather App</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #e9ecef;
            color: #212529;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        nav {
            width: 100%;
            background-color: #343a40;
            padding: 15px 0;
            display: flex;
            justify-content: center;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
        }

        nav a {
            color: #f8f9fa;
            text-decoration: none;
            margin: 0 20px;
            font-size: 18px;
            font-weight: 500;
            transition: color 0.3s;
        }

        nav a:hover {
            color: #ced4da;
        }

        .container {
            width: 100%;
            max-width: 800px;
            padding: 20px;
            margin-top: 80px;
            text-align: center;
        }

        h1 {
            font-size: 2.5rem;
            color: #343a40;
            margin-bottom: 10px;
        }

        p {
            font-size: 1.2rem;
            color: #6c757d;
        }

        .search-container {
            margin-top: 30px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .search-box {
            width: 100%;
            max-width: 400px;
            padding: 12px;
            font-size: 1rem;
            border: 1px solid #ced4da;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 10px;
            transition: border-color 0.3s;
        }

        .search-box:focus {
            border-color: #007bff;
            outline: none;
            box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
        }

        .search-button {
            padding: 12px 24px;
            font-size: 1rem;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            margin: 5px;
        }

        .search-button:hover {
            background-color: #0056b3;
        }

        .weather-result {
            margin-top: 20px;
            font-size: 1.2rem;
            color: #343a40;
            background-color: #ffffff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            margin: 20px auto;
        }
    </style>
</head>
<body>
    <nav>
        <a href="/">Weather</a>
        <a href="/about">About</a>
        <a href="/help">Help</a>
    </nav>
    <div class="container">
        <h1>Weather App</h1>
        <p>Use this site to get your weather forecast!</p>
        <div class="search-container">
            <input type="text" class="search-box" id="cityInput" placeholder="Enter city name...">
            <div>
                <button class="search-button" onclick="getWeather()">Search</button>
                <button class="search-button" onclick="useCurrentLocation()">Use My Current Location</button>
            </div>
        </div>
        <div class="weather-result" id="weatherResult"></div>
    </div>
     <div>
        <p>Note: Api Will expire in 30 Days!<br>Search By Location Name</p>
    </div>
    <script>
        console.log('connected');

        function getWeather() {
            const city = document.getElementById('cityInput').value;
            const weatherResult = document.getElementById('weatherResult');
            weatherResult.innerHTML = 'Loading...';

            fetch(`http://localhost:3000/weather?address=${city}`)
                .then((res) => res.json())
                .then((data) => {
                    if (data.error) {
                        weatherResult.innerHTML = 'ERROR: Unable to find location. Try another search!';
                    } else {
                        weatherResult.innerHTML = `Location: ${data.location}<br>Forecast: ${data.forecast}`;
                    }
                })
                .catch((err) => {
                    weatherResult.innerHTML = 'ERROR: Unable to find location. Try another search!';
                });
        }

        function useCurrentLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    const lat = position.coords.latitude;
                    const lon = position.coords.longitude;

                    fetch(`http://localhost:3000/weather?lat=${lat}&lon=${lon}`)
                        .then((res) => res.json())
                        .then((data) => {
                            const weatherResult = document.getElementById('weatherResult');
                            if (data.error) {
                                weatherResult.innerHTML = `ERROR: ${data.error}`;
                            } else {
                                weatherResult.innerHTML = `Location: ${data.location}<br>Forecast: ${data.forecast}`;
                            }
                        })
                        .catch((err) => {
                            const weatherResult = document.getElementById('weatherResult');
                            weatherResult.innerHTML = 'ERROR: Unable to find location. Try another search!';
                        });
                }, (error) => {
                    console.error(error);
                    const weatherResult = document.getElementById('weatherResult');
                    weatherResult.innerHTML = 'ERROR: Unable to fetch current location. Please enable location services.';
                });
            } else {
                const weatherResult = document.getElementById('weatherResult');
                weatherResult.innerHTML = 'ERROR: Geolocation is not supported by this browser.';
            }
        }
    </script>
</body>
</html>
